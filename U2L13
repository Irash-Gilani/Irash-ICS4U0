def mmult(P, Q):
    # Precondition: P is a current probability
    #               Q is the stochastic future probability
    # Returns: An array of probability for the next day
  multarr = []
  sum = 0
# goes through values in both matrixes and multiplies
  for rowcount in range(len(P)):
   
   
   for columncount in range(len(Q[0])):
   
    mat1val = P[rowcount]
    mat2val = Q[columncount][rowcount]
    #print(rowcount, columncount)
    print("vals",mat1val, mat2val)
    print("product = ",mat1val*mat2val)
    sum += mat1val*mat2val
    print("sum =",sum)
   multarr.append(sum)
   sum = 0 
  print(multarr)
    
      
  
  return multarr

A = [.6, .4] # prob. Marla is late today
B = [[.7, .3],
     [.9, .1]] # conditional prob. model for Marla's punctuality tomorrow

C = mmult(A, B)
print("On day 1, the probability that Marla will be early the next day is: ", C[0])
print("On day 1, the probability that Marla will be late the next day is: ", C[1])

days = 15
for i in range(2, days):
    C = mmult(C, B)
    print(C)
    print("On day %d, the prob. Marla is early the next day is: %f" % (i, C[0]) )
    print("On day %d, the prob. Marla is late the next day is: %f" % (i, C[1]) )

# unfinished
