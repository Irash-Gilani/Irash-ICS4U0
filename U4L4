class Fraction:
    # See slideshow for a full discussion of this code.
    #
    def __init__(self, num, den):
        self.__n = num
        self.__d = den
    
    def getNum(self):
        return self.__n

    def getDen(self):
        return self.__d
    
    def setNum(self, num):
        self.__n = num
    
    def setDen(self, den):
        self.__d = den
    
    def __str__(self):
        return "{0}/{1}".format(self.__n, self.__d)
        
class Fraction2(Fraction):
  def __init__(self, num, den):
    Fraction.__init__(self, num, den)
  
  def check(self):
    if self.getDen() == 0:
      return ("Error: The denominator is zero.")
    else:
      return ("Valid: The denominator is not zero.")
      
  def unreduce(self, unint):
    multnum = self.getNum() * unint
    multden = self.getDen() * unint
    
    self.__n = multnum
    self.__d = multden
    
    return "{0}/{1}".format(self.__n, self.__d)
    
    
        
# driver code
f = Fraction(3, 4)
print(f)

f = Fraction2(3, 4)
print(f.check())
print(f.unreduce(2))



