# Irash Gilani
# 846852

def matshift(matrix):
  shiftmatcols = [] * len(matrix)
  shiftmat = [shiftmatcols] * len(matrix)
  shiftby = 0
  
  print("empty mat", shiftmat)
  print()
  
  
  for rownum in range(len(matrix)):
    for val in range(len(matrix)):
      shiftedval = 0
      shift = (val + shiftby) % (len(matrix))
      #print(rownum, val, "", rownum, shift)
      shiftedval = matrix[shift]
      print(shiftedval)
      shiftmat[rownum].append(shiftedval)
      
    shiftby += 3
    
  return shiftmat

primenumbers = [5, 7, 11, 13, 17, 19]
inputprime = False
N = 0

# check if input is a prime number between or equal to 5 and 19
while not inputprime:
  N = int(input("Input a prime number between 5 and 19: "))
  if N in primenumbers:
    inputprime = True
  else:
    print("Input is outside of range")

# creates a square matrix with a length of N
squarearr1 = [0] * N

# goes through every value in square1arr and changes it from 1 to N
for i in range(len(squarearr1)):
  squarearr1[i] = i + 1

print("mat of N:", squarearr1)
print()

print("shiftmat", matshift(squarearr1))

#unfinished
